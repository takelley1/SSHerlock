---
# yamllint disable

- name: MISC | Set timezone
  community.general.timezone:
    name: "{{ timezone }}"

- name: MISC | Set number of consoles
  block:
    - name: MISC | CONSOLES | Check for console-setup file
      ansible.builtin.stat:
        path: /etc/default/console-setup
      register: file

    - name: MISC | CONSOLES | Set number of active consoles
      ansible.builtin.lineinfile:
        path: /etc/default/console-setup
        regexp: ^\s*ACTIVE_CONSOLES=.*
        line: ACTIVE_CONSOLES="/dev/tty[1-{{ common_active_consoles }}]"
      when:
        - file.stat.readable is defined
        - file.stat.readable

- name: MISC | MOTD advertisement disabled
  block:
    - name: MISC | MOTD | Check for file
      ansible.builtin.stat:
        path: /etc/default/motd-news
      register: file

    - name: MISC | MOTD | Ad disabled
      ansible.builtin.lineinfile:
        path: /etc/default/motd-news
        regexp: ^\s*ENABLED=(1|0)\s*
        line: ENABLED=0
      when:
        - file.stat.readable is defined
        - file.stat.readable

- name: MISC | Replaced getty with ngetty
  block:

    - name: MISC | GETTY | ngetty installed
      ansible.builtin.apt:
        name: ngetty
        cache_valid_time: 60000

    - name: MISC | GETTY | Getty/agetty replaced with ngetty
      ansible.builtin.file:
        src: /sbin/ngetty
        dest: "{{ item }}"
        state: link
        force: true
      loop:
        - /sbin/getty
        - /sbin/agetty

- name: MISC | Set grub timeout
  block:
    - name: MISC | GRUB | Edit /etc/default/grub
      ansible.builtin.lineinfile:
        path: /etc/default/grub
        regexp: ^\s*GRUB_TIMEOUT=[0-9]*\s*
        line: GRUB_TIMEOUT={{ common_grub_timeout }}
      register: result

    - name: MISC | GRUB | Get grub.cfg path
      ansible.builtin.find:
        paths: /boot
        patterns: grub.cfg
        recurse: true
        file_type: file
      register: find
      when: result.changed

    - name: MISC | GRUB | Regenerate grub config
      ansible.builtin.shell: grub-mkconfig --output={{ find.files[0].path }}
      when: result.changed

- name: MISC | Configure fstab
  block:
    - name: MISC | FSTAB | Check for fstab
      ansible.builtin.stat:
        path: /etc/fstab
      register: file
      when: common_mount_noatime

    - name: MISC | FSTAB | Modify mount options
      ansible.builtin.script: scripts/mount-modifier.sh
      register: result
      changed_when: "'RESULT-changed' in result.stdout"
      failed_when:
        - "'RESULT-changed' not in result.stdout"
        - "'RESULT-ok' not in result.stdout"
      when:
        - file.stat.readable is defined
        - file.stat.readable
        - common_mount_noatime

- name: MISC | Configure cron
  block:
    - name: MISC | CRON | Check for cron
      ansible.builtin.shell: hash cron 2>/dev/null
      changed_when: false
      failed_when: false
      register: cron_exists

    - name: MISC | CRON | Cron jobs configured
      ansible.builtin.cron:
        backup: "{{ item.backup | default(omit) }}"
        cron_file: "{{ item.cron_file | default(omit) }}"
        day: "{{ item.day | default(omit) }}"
        disabled: "{{ item.disabled | default(omit) }}"
        env: "{{ item.env | default(omit) }}"
        hour: "{{ item.hour | default(omit) }}"
        insertafter: "{{ item.insertafter | default(omit) }}"
        insertbefore: "{{ item.insertbefore | default(omit) }}"
        job: "{{ item.job | default(omit) }}"
        minute: "{{ item.minute | default(omit) }}"
        month: "{{ item.month | default(omit) }}"
        name: "{{ item.name | default(omit) }}"
        reboot: "{{ item.reboot | default(omit) }}"
        special_time: "{{ item.special_time | default(omit) }}"
        state: "{{ item.state | default(omit) }}"
        user: "{{ item.user | default(omit) }}"
        weekday: "{{ item.weekday | default(omit) }}"
      when: cron_exists.rc == 0
      loop: "{{ cronjobs }}"
