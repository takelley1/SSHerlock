---

name: Python

on:  # yamllint disable-line
  push:
    paths:
      - 'ssherlock/**'
      - 'ssherlock_runner/**'
      - '**.py'
      - '.github/workflows/python.yml'

env:
  PYTHON_VERSION: "3.12.5"

jobs:

  codespell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install codespell

      - name: Look for misspellings with codespell
        run: |
          # Skip venv, Ansible Jinja files.
          codespell --skip "./venv/*,*ansible*.j2" --ignore-words-list "assertIn,ure,usera,usere"

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install yamllint

      - name: Lint with yamllint
        run: |
          yamllint --config-file ./conf/.yamllint $(git ls-files '*.yml')

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install flake8

      - name: Run flake8
        run: |
          flake8 --conf ./conf/.flake8rc $(git ls-files '*.py')

  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install pylint

      - name: Run pylint
        run: |
          pylint --rcfile=./conf/.pylintrc $(git ls-files '*.py')

  pydocstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install pydocstyle

      - name: Lint with pydocstyle
        run: |
          pydocstyle --config=./conf/.pydocstyle $(git ls-files)

  build_runner:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t ssherlock_runner:1 .

  test_app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Dependencies
        run: |
          pip install -r ./requirements_test.txt

      - name: Run Tests
        run: |
          bash ./test_ssherlock.sh

  test_runner:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Dependencies
        run: |
          pip install -r ./requirements_test.txt

      - name: Run Tests
        run: |
          bash ./test_ssherlock_runner.sh
